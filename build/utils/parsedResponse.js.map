{"version":3,"sources":["../../src/utils/parsedResponse.js"],"names":["parseResponseString","ussdResponse","parsedResponse","split","lastSelectedOption","updatedResponse","item","ussdText","join"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,YAAD,EAAkB;AACpD,MAAIA,YAAY,KAAK,GAArB,EAA0B;AACzB,WAAO,CAAC,EAAD,EAAK,GAAL,CAAP;AACA,GAFD,MAEO;AACN,QAAMC,cAAc,GAAGD,YAAY,CAACE,KAAb,CAAmB,GAAnB,CAAvB;AACA,QAAMC,kBAAkB,GAAG,uBAAAF,cAAc,MAAd,CAAAA,cAAc,EAAO,CAAC,CAAR,CAAd,CAAyB,CAAzB,CAA3B,CAFM,CAGN;;AACA,QAAMG,eAAe,GAAG,wBAAAH,cAAc,MAAd,CAAAA,cAAc,EAAQ,UAACI,IAAD,EAAU;AACvD,UAAIA,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,IAA3B,EAAiC;AAChC,eAAO,KAAP;AACA,OAFD,MAEO;AACN,eAAO,IAAP;AACA;AACD,KANqC,CAAtC;AAQA;AACF;AACA;AACA;;AAEE,QAAMC,QAAQ,GAAGF,eAAe,CAACG,IAAhB,CAAqB,GAArB,CAAjB;AACA,WAAO,CAACD,QAAD,EAAWH,kBAAX,CAAP;AACA;AACD,CAvBM","sourcesContent":["/**\n *\n * @param ussdResponse\n * @returns array with first index represent response without next or back number\n * and second index represents the last selected option\n */\n\nexport const parseResponseString = (ussdResponse) => {\n\tif (ussdResponse === '0') {\n\t\treturn ['', '0'];\n\t} else {\n\t\tconst parsedResponse = ussdResponse.split('*');\n\t\tconst lastSelectedOption = parsedResponse.slice(-1)[0];\n\t\t// remove 00 or 0 from the parsed response\n\t\tconst updatedResponse = parsedResponse.filter((item) => {\n\t\t\tif (item == '0' || item == '00') {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * return empty string for empty array in case the array only consist of 0 and 00.\n\t\t * return string with *\n\t\t */\n\n\t\tconst ussdText = updatedResponse.join('*');\n\t\treturn [ussdText, lastSelectedOption];\n\t}\n};\n"],"file":"parsedResponse.js"}