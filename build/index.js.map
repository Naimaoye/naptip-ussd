{"version":3,"sources":["../src/index.js"],"names":["port","app","App","res","req","console","log","request","qs","parse","getQuery","end","listen","token"],"mappings":";;;;AAAA;;AACA;;AAGA;;AACA;;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,IAAMA,IAAI,GAAG,IAAb,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,GAAG,GAAG,IAAIC,WAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAc;AAElC;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;;AACA,MAAMG,OAAO,GAAGC,eAAGC,KAAH,CAASL,GAAG,CAACM,QAAJ,EAAT,CAAhB;;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBH,GAAlB,EAPkC,CAQlC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAA,EAAAA,GAAG,CAACQ,GAAJ,CAAQ,MAAR;AAEC,CA1EW,EA0ETC,MA1ES,CA0EFZ,IA1EE,EA0EI,UAAAa,KAAK,EAAI;AACvBA,EAAAA,KAAK,GACLR,OAAO,CAACC,GAAR,6BAAiCN,IAAjC,EADK,GAELK,OAAO,CAACC,GAAR,oCAAwCN,IAAxC,EAFA;AAGD,CA9EW,CAAZ;AAgFAK,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,GAAnB","sourcesContent":["import { App } from '@sifrr/server';\nimport qs from 'qs';\n\n//import { readJson } from './utils/readJson';\nimport menu from './controllers/ussd';\nimport { parseResponseString } from './utils/parsedResponse';\n// import {\n// GENDER_ARRAY_Q1,\n// INCIDENCE_ARRAY_Q2,\n// //STATE_FIRST_LETTER_Q3,\n// STATE_ARRAY_1,\n// STATE_ARRAY_2,\n// STATE_ARRAY_3,\n// STATE_ARRAY_4,\n// STATE_ARRAY_5,\n// GENDER_ARRAY_PATTERN,\n// INCIDENCE_ARRAY_PATTERN,\n// STATE_FIRST_LETTER_PATTERN,\n// STATE_ARRAY_PATTERN,\n// } from './utils/constants';\n\n//const app = new App();\n\nconst port = 3003;\n\n// parse request url coming from kannel\n// give it an empty reply once the user connects \n// parse the url params\n// send other request through fetch client\n// console.log something once the request is made\n\nconst app = new App((res, req) => {\n\n// let ussdQuestionNumber = 0;\n// let details = {};\nconsole.log('request', req);\nconst request = qs.parse(req.getQuery());\nconsole.log(request);\nconsole.log('res',res);\n//const responseArray = parseResponseString(text);\n//console.log('respArray', responseArray);\n\n// if(ussdQuestionNumber == 0){\n//   details.questionNumber = 1;\n// }\n// if (details.questionNumber == 1){\n//   if (GENDER_ARRAY_PATTERN.includes(responseArray[0])){\n//     const parseResponseText = parseInt(responseArray[1]);\n//     const genderValue = parseResponseText - 1;\n//     details.gender = GENDER_ARRAY_Q1[genderValue];\n//     details.questionNumber = 2;\n//   }\n// }\n// if(details.questionNumber == 2){\n//   if (INCIDENCE_ARRAY_PATTERN.test(responseArray[0])) {\n//     const parseResponseText = parseInt(responseArray[1]);\n//     const incidenceValue = parseResponseText - 1;\n//     details.incidenceType = INCIDENCE_ARRAY_Q2[incidenceValue];\n//     details.questionNumber = 3;\n// }\n// }\n// if(details.questionNumber == 3){\n//   if (STATE_FIRST_LETTER_PATTERN.test(responseArray[0])) {\n//     const parseResponseText = parseInt(responseArray[1]);\n//     details.stateFirstLetter = parseResponseText;\n//     details.questionNumber = 4;\n// } \n// }\n// if(details.questionNumber == 4){\n//   if (STATE_ARRAY_PATTERN.test(responseArray[0])) {\n//     if(details.stateFirstLetter == 1){\n//       const parseResponseText = parseInt(responseArray[1]);\n//       const stateOption = parseResponseText - 1;\n//       const state = STATE_ARRAY_1[stateOption];\n//       details.state = state;\n//     } else if(details.stateFirstLetter == 2){\n//       const parseResponseText = parseInt(responseArray[1]);\n//       const stateOption = parseResponseText - 1;\n//       const state = STATE_ARRAY_2[stateOption];\n//       details.state = state;\n//     } else if(details.stateFirstLetter == 3){\n//       const parseResponseText = parseInt(responseArray[1]);\n//       const stateOption = parseResponseText - 1;\n//       const state = STATE_ARRAY_3[stateOption];\n//       details.state = state;\n//     } else if(details.stateFirstLetter == 4){\n//       const parseResponseText = parseInt(responseArray[1]);\n//       const stateOption = parseResponseText - 1;\n//       const state = STATE_ARRAY_4[stateOption];\n//       details.state = state;\n//     } else if(details.stateFirstLetter == 5){\n//       const parseResponseText = parseInt(responseArray[1]);\n//       const stateOption = parseResponseText - 1;\n//       const state = STATE_ARRAY_5[stateOption];\n//       details.state = state;\n//     }\n    \n// }\n// }\n//console.log('details', details);\n// menu.run(query, (ussdResult) => {\n//    res.writeStatus(\"200 OK\").end(ussdResult);\n// });\nres.end('done');\n\n}).listen(port, token => {\n  token ?\n  console.log(`Listening to port ${port}`) :\n  console.log(`Failed to listen to port ${port}`);\n});\n\nconsole.log('app', app);\n"],"file":"index.js"}